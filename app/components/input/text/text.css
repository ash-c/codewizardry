.input {
  display: flex;
  font-size: 16px;
  font-size: max(16px, 1rem);
  font-family: inherit;
  padding: 0.25em 0.5em;
  background-color: transparent;
  outline: none !important;
  border: none !important;
  width: 100%;
}

textarea.input {
  resize: vertical;
}

.input:not(textarea) {
  line-height: 1;
  height: 2.25rem;
}

input[type='file'] {
  font-size: 0.9rem;
  padding-top: 0.35rem;
}

.input-container {
  position: relative;
  display: inline-flex;
  flex-direction: column;
}

.helper-text {
  position: absolute;
  bottom: -1.2rem;
  left: 1rem;
  font-size: 0.8rem;
}
.error-text {
  color: var(--colour-error) !important;
}

/* Outline. */
.input-outline {
  display: flex;
  position: absolute;
  left: 0;
  right: 0;
  width: 100%;
  max-width: 100%;
  height: 100%;
  pointer-events: none;
  text-align: left;
}

.input-outline .left {
  width: 12px;
  height: 100%;
  border-radius: 4px 0 0 4px;
  border-color: var(--colour-grey);
  border-top: 1px solid;
  border-bottom: 1px solid;
  border-left: 1px solid;
  border-right: none;
}

.input-outline .label {
  flex: 0 0 auto;
  width: auto;
  max-width: calc(100% - 12px * 2);
  height: 100%;
  border-color: var(--colour-grey);
  border-top: 1px solid;
  border-bottom: 1px solid;
  border-left: none;
  border-right: none;
}

.input-outline label {
  display: inline-block;
  position: relative;
  max-width: 100%;
  pointer-events: none;
  top: 50%;
  transform: translateY(-50%);
  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1),
    color 150ms cubic-bezier(0.4, 0, 0.2, 1);
}

.input-outline .right {
  flex-grow: 1;
  height: 100%;
  border-radius: 0 4px 4px 0;
  border-color: var(--colour-grey);
  border-top: 1px solid;
  border-bottom: 1px solid;
  border-left: none;
  border-right: 1px solid;
  pointer-events: none;
}

.input-outline .error-border {
  border-color: var(--colour-error) !important;
  color: var(--colour-error) !important;
}

/* With placeholder. */
.input-outline .label.placeholder {
  border-top: none;
}

.input-outline .placeholder label {
  transform: translateY(-2rem) scale(0.75);
}

/* Focus state. */
.input-outline .focused {
  border-color: var(--colour-primary);
  border-width: 2px;
}

.input-outline .label.focused {
  border-top: none;
  color: var(--colour-primary);
}

.input-outline .focused label {
  transform: translateY(-2rem) scale(0.75);
}

/* Readonly */
.input[readonly] {
  color: var(--colour-grey);
}

.input-outline .readonly {
  border-color: var(--colour-grey-dark);
  border-width: 1px;
  color: var(--colour-grey);
}

.input-outline .label.readonly {
  color: var(--colour-grey);
}

/* Disabled */
.input[disabled] {
  background-color: var(--colour-grey-light);
}

.input-outline .disabled {
  border-color: var(--colour-grey-dark);
  color: var(--colour-grey);
}

.input-outline .label.disabled {
  color: var(--colour-grey);
}
