{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/components/core/core.tsx", "../app/components/types/Gap.ts", "../app/components/layout/box/Box.tsx", "../app/components/layout/container/Container.tsx", "../app/components/layout/column/Column.tsx", "../app/components/layout/stack/Stack.tsx", "../app/components/layout/divider/Divider.tsx", "../app/components/input/button/Button.tsx", "../app/components/input/checkbox/Checkbox.tsx", "../app/components/input/text/Text.tsx", "../app/components/input/iconbutton/IconButton.tsx", "../app/components/icons/svg/Svg.tsx", "../app/components/icons/delete/Delete.tsx", "../app/components/icons/index.ts", "../app/routes/projects._index.tsx", "../app/routes/projects.todo/route.tsx", "../app/routes/projects.todo/store/todo.store.tsx", "../app/routes/projects.todo/store/useTodos.tsx", "../app/routes/projects.todo/todo.tsx", "../app/routes/projects.todo/todoItem.tsx", "../app/routes/_index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  NavLink,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react';\n\nimport { Stack, Core, CoreLinks, Column, Box } from '@cw/index';\n\nimport type { LinksFunction, V2_MetaFunction } from '@remix-run/node';\n\nexport const meta: V2_MetaFunction = () => [{ title: 'Code Wizardry' }];\n\nexport const links: LinksFunction = () => [...CoreLinks()];\n\ntype ErrorBoundaryProps = {\n  error: Error;\n};\n\nexport function ErrorBoundary({ error }: ErrorBoundaryProps) {\n  return (\n    <Box>\n      <h1>Error</h1>\n      <Stack>\n        <h2>Message</h2>\n        <Box>{error.message}</Box>\n        <h3>Stack Trace</h3>\n        <Box>{error.stack}</Box>\n      </Stack>\n    </Box>\n  );\n}\n\n//eslint-disable-next-line\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf=8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Core>\n          <nav id=\"navbar\">\n            <Column gap=\"none\" className=\"height-full align-center\">\n              <Box className=\"nav-logo\">CW</Box>\n              <NavLink to=\"/\" prefetch=\"intent\">\n                Home\n              </NavLink>\n              <NavLink to=\"/projects\" prefetch=\"intent\">\n                Projects\n              </NavLink>\n            </Column>\n          </nav>\n          <Outlet />\n        </Core>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import type { ReactNode } from 'react';\n\nimport {\n  ColumnLinks,\n  ContainerLinks,\n  StackLinks,\n  ButtonLinks,\n  DividerLinks,\n  CheckboxLinks,\n  TextLinks,\n  IconLinks,\n  IconButtonLinks } from\n'@cw/index';\n\nimport styles from './core.css';\n\nimport type { LinkDescriptor } from '@remix-run/node';\n\nexport function links(): LinkDescriptor[] {\n  return [\n  {\n    rel: 'stylesheet',\n    href: 'https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;800&display=swap'\n  },\n  {\n    rel: 'stylesheet',\n    href: 'https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@400;700&display=swap'\n  },\n  { rel: 'stylesheet', href: styles },\n  ...StackLinks(),\n  ...ColumnLinks(),\n  ...ContainerLinks(),\n  ...DividerLinks(),\n  ...ButtonLinks(),\n  ...IconButtonLinks(),\n  ...CheckboxLinks(),\n  ...TextLinks(),\n  ...IconLinks()];\n\n}\n\ntype CoreProps = {\n  children?: ReactNode;\n};\n\nexport const Core = ({ children }: CoreProps) => {\n  return <>{children}</>;\n};", "export type Gap = 'none' | 'xsmall' | 'small' | 'medium' | 'large' | 'xlarge';\n\nexport const GapType: Record<Gap, string> = {\n  none: 'gap-none',\n  xsmall: 'gap-xsmall',\n  small: 'gap-small',\n  medium: 'gap-medium',\n  large: 'gap-large',\n  xlarge: 'gap-xlarge',\n} as const;\n", "import type { ElementType, HTMLAttributes, ReactNode } from 'react';\n\nexport type BoxProps = {\n  as?: ElementType;\n  children?: ReactNode;\n} & HTMLAttributes<HTMLElement>;\n\nexport const Box = ({ as: Tag = 'div', children, ...rest }: BoxProps) => {\n  return <Tag {...rest}>{children}</Tag>;\n};\n", "import type { HTMLAttributes, ReactNode } from 'react';\n\nimport React from 'react';\n\nimport { Box } from '../box';\n\nimport styles from './container.css';\n\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const links: LinksFunction = () => [\n{\n  rel: 'stylesheet',\n  href: styles\n}];\n\n\ntype ContainerProps = {\n  children?: ReactNode;\n} & HTMLAttributes<HTMLElement>;\n\nexport const Container = ({ children, ...rest }: ContainerProps) => {\n  return (\n    <Box {...rest} className=\"cw-container\">\n      {children}\n    </Box>);\n\n};", "import type { HTMLAttributes } from 'react';\n\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { GapType } from '../../types';\nimport { Box } from '../box';\n\nimport styles from './column.css';\n\nimport type { Gap } from '../../types';\nimport type { BoxProps } from '../box/Box';\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const links: LinksFunction = () => [\n{\n  rel: 'stylesheet',\n  href: styles\n}];\n\n\nexport type ColumnProps = BoxProps & {\n  gap?: Gap;\n} & HTMLAttributes<HTMLElement>;\n\nexport const Column = ({\n  as: Tag = 'div',\n  gap = 'medium',\n  children,\n  className\n}: ColumnProps) => {\n  return (\n    <Box as={Tag} className={clsx('cw-column', className, GapType[gap])}>\n      {children}\n    </Box>);\n\n};", "import clsx from 'clsx';\n\nimport { GapType } from '../../types';\nimport { Box } from '../box/Box';\n\nimport styles from './stack.css';\n\nimport type { Gap } from '../../types';\nimport type { BoxProps } from '../box/Box';\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const links: LinksFunction = () => [\n{\n  rel: 'stylesheet',\n  href: styles\n}];\n\n\nexport type StackProps = BoxProps & {\n  gap?: Gap;\n};\n\nexport const Stack = ({\n  as: Tag = 'div',\n  children,\n  gap = 'medium',\n  className,\n  ...rest\n}: StackProps) => {\n  return (\n    <Box\n      as={Tag}\n      className={clsx('cw-stack', GapType[gap], className)}\n      {...rest}>\n\n      {children}\n    </Box>);\n\n};", "import type { DetailedHTMLProps, HTMLAttributes } from 'react';\n\nimport clsx from 'clsx';\n\nimport styles from './divider.css';\n\nimport type { Colour } from '@cw/types';\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const links: LinksFunction = () => [\n{\n  rel: 'stylesheet',\n  href: styles\n}];\n\n\nexport type DividerProps = {\n  colour?: 'light' | 'medium' | 'dark' | Colour;\n} & Omit<\n  DetailedHTMLProps<HTMLAttributes<HTMLHRElement>, HTMLHRElement>,\n  'color'>;\n\n\nexport const Divider = ({\n  colour = 'medium',\n  className,\n  ...rest\n}: DividerProps) => {\n  return <hr {...rest} className={clsx(colour, className)} />;\n};", "import type {\n  ButtonHTMLAttributes,\n  DetailedHTMLProps,\n  ReactNode,\n  FunctionComponent } from\n'react';\n\nimport styles from './button.css';\n\nimport type { SvgProps } from '@cw/icons/svg/Svg';\nimport type { Colour } from '@cw/types';\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const links: LinksFunction = () => [\n{\n  rel: 'stylesheet',\n  href: styles\n}];\n\n\nexport type ButtonProps = {\n  children?: ReactNode;\n  colour?: Colour;\n  StartIcon?: FunctionComponent<SvgProps>;\n  EndIcon?: FunctionComponent<SvgProps>;\n} & Omit<\n  DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>,\n  'color'>;\n\n\nexport const Button = ({\n  children,\n  colour = 'primary',\n  StartIcon,\n  EndIcon,\n  ...rest\n}: ButtonProps) => {\n  if (StartIcon && EndIcon) {\n    throw new Error(\n      'Buttons can only have either a Start or End Icon, not both.'\n    );\n  }\n\n  return (\n    <button {...rest} className={colour}>\n      {StartIcon && <StartIcon />}\n      <span>{children}</span>\n      {EndIcon && <EndIcon />}\n    </button>);\n\n};", "import type { DetailedHTMLProps, InputHTMLAttributes } from 'react';\n\nimport clsx from 'clsx';\n\nimport styles from './checkbox.css';\n\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const links: LinksFunction = () => [\n{\n  rel: 'stylesheet',\n  href: styles\n}];\n\n\nexport type CheckboxProps = {\n  label?: string;\n} & DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nexport const Checkbox = ({ label, ...rest }: CheckboxProps) => {\n  return (\n    <label\n      className={clsx([\n      'checkbox',\n      { disabled: rest.disabled },\n      { gap: !!label }]\n      )}>\n\n      <input type=\"checkbox\" {...rest} />\n      {label}\n    </label>);\n\n};", "import type { DetailedHTMLProps, InputHTMLAttributes } from 'react';\n\nimport clsx from 'clsx';\nimport { useCallback } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nimport styles from './text.css';\n\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const links: LinksFunction = () => [\n{\n  rel: 'stylesheet',\n  href: styles\n}];\n\n\nexport type TextProps = {\n  label?: string;\n  helperText?: string;\n  errorText?: string;\n} & DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nexport const Text = ({\n  value = '',\n  helperText,\n  errorText,\n  label,\n  placeholder,\n  readOnly,\n  disabled,\n  required,\n  onFocus = () => null,\n  onBlur = () => null,\n  onChange = () => null,\n  ...rest\n}: TextProps) => {\n  const [hasPlaceholder, setHasPlaceholder] = useState(!!placeholder);\n  const [isFocused, setIsFocused] = useState(false);\n  const [text, setText] = useState<string>((value as string));\n\n  useEffect(() => {\n    if (text?.length > 0) {\n      setHasPlaceholder(true);\n    } else if (!placeholder) {\n      setHasPlaceholder(false);\n    }\n  }, [text, placeholder]);\n\n  useEffect(() => {\n    if (value !== text) {\n      setText((value as string));\n      if ((value as string)?.length <= 0) {\n        setIsFocused(false);\n      }\n    }\n  }, [value, text]);\n\n  const handleFocusChange = useCallback((focus: boolean) => {\n    setIsFocused(focus);\n  }, []);\n\n  const labelCss = useCallback(\n    () => ({\n      placeholder: hasPlaceholder,\n      focused: isFocused,\n      readonly: readOnly,\n      disabled,\n      'error-border': !!errorText\n    }),\n    [hasPlaceholder, isFocused, readOnly, disabled, errorText]\n  );\n\n  return (\n    <div\n      className={clsx('input-container', {\n        'margin-b-medium': helperText || errorText,\n        'error-text': !!errorText\n      })}>\n\n      <input\n        {...rest}\n        placeholder={placeholder}\n        disabled={disabled}\n        readOnly={readOnly}\n        value={text}\n        className=\"input\"\n        onFocus={(e) => {\n          handleFocusChange(true);\n          onFocus(e);\n        }}\n        onBlur={(e) => {\n          handleFocusChange(false);\n          onBlur(e);\n        }}\n        onChange={(e) => {\n          setText(e.target.value);\n          onChange(e);\n        }} />\n\n      <div className={clsx('helper-text')}>{errorText || helperText}</div>\n      <div className=\"input-outline\">\n        <div className={clsx(['left', labelCss()])} />\n        <div className={clsx(['label', labelCss()])}>\n          <label>\n            {label}\n            {required && '*'}\n          </label>\n        </div>\n        <div className={clsx(['right', labelCss()])} />\n      </div>\n    </div>);\n\n};", "import type {\n  ButtonHTMLAttributes,\n  DetailedHTMLProps,\n  FunctionComponent } from\n'react';\n\nimport clsx from 'clsx';\n\nimport styles from './iconbutton.css';\n\nimport type { SvgProps } from '@cw/icons/svg/Svg';\nimport type { Colour } from '@cw/types';\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const links: LinksFunction = () => [\n{\n  rel: 'stylesheet',\n  href: styles\n}];\n\n\nexport type IconButtonProps = {\n  Icon: FunctionComponent<SvgProps>;\n  colour?: Colour;\n} & Omit<\n  DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>,\n  'color'>;\n\n\nexport const IconButton = ({\n  Icon,\n  colour = 'default',\n  className,\n  ...rest\n}: IconButtonProps) => {\n  return (\n    <button {...rest} className={clsx('icon-button', className)}>\n      <Icon colour={colour} />\n    </button>);\n\n};", "import type { ReactNode, SVGProps } from 'react';\n\nimport clsx from 'clsx';\n\nimport type { Colour } from '@cw/types';\n\nexport type SvgProps = Omit<SVGProps<SVGSVGElement>, 'color'> & {\n  colour?: Colour;\n  children?: ReactNode;\n};\n\nexport const Svg = ({ children, colour = 'default', ...rest }: SvgProps) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth={1.5}\n      stroke=\"currentColor\"\n      aria-hidden={true}\n      focusable={false}\n      className={clsx('icon', {\n        [colour as string]: colour !== 'default',\n      })}\n    >\n      {children}\n    </svg>\n  );\n};\n", "import type { SVGProps } from 'react';\n\nimport { Svg } from '../svg/Svg';\n\nimport type { Colour } from '@cw/types';\n\nexport type DeleteProps = Omit<SVGProps<SVGSVGElement>, 'color'> & {\n  colour?: Colour;\n};\n\nexport const Delete = (props: DeleteProps) => {\n  return (\n    <Svg {...props}>\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n      />\n    </Svg>\n  );\n};\n", "import styles from './icons.css';\n\nimport type { LinksFunction } from '@remix-run/node';\n\nconst links: LinksFunction = () => [\n{\n  rel: 'stylesheet',\n  href: styles\n}];\n\n\nexport const IconLinks = links;\n\nexport { Delete } from './delete/Delete';", "import { Link } from '@remix-run/react';\n\nimport { Column, Container } from '@cw/index';\n\n//eslint-disable-next-line\nexport default function Projects() {\n  return (\n    <Container>\n      <main>\n        <h1>Projects</h1>\n        <h2>Work</h2>\n        <h2>Learning</h2>\n        <Column>\n          <Link to=\"todo\">ToDo</Link>\n          {/* <Link to=\"journal\">Journal</Link>\n          <Link to=\"recipe-book\">Recipe Book</Link> */}\n        </Column>\n      </main>\n    </Container>\n  );\n}\n", "import { TodoProvider } from './store';\nimport { TodoApp, TodoLinks } from './todo';\n\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const links: LinksFunction = () => [...TodoLinks()];\n\n//eslint-disable-next-line\nexport default function todo() {\n  return (\n    <TodoProvider>\n      <TodoApp />\n    </TodoProvider>\n  );\n}\n", "import type { ReactNode } from 'react';\n\nimport { useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { createContext, useState } from 'react';\n\nimport type { Todo } from '@todo/types/index';\n\nconst STORAGEKEY = 'todoItems';\n\ntype TodoContextType = {\n  addTodo: (text: string) => void;\n  setDoneStatus: (id: number, status: boolean) => void;\n  deleteTodo: (id: number) => void;\n  todos: Todo[];\n};\n\nexport const TodoContext = createContext<TodoContextType | null>(null);\n\ntype TodoProviderProps = {\n  children?: ReactNode;\n};\n\nexport const TodoProvider = ({ children }: TodoProviderProps) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    const localTodos = localStorage.getItem(STORAGEKEY);\n\n    if (localTodos) {\n      setTodos(JSON.parse(localTodos));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(STORAGEKEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const onAddTodo = useCallback(\n    (text: string) => {\n      if (todos?.length > 0) {\n        todos.push({ id: todos[todos.length - 1].id + 1, text, done: false });\n      } else {\n        todos.push({ id: 1, text, done: false });\n      }\n      setTodos([...todos]);\n    },\n    [todos]\n  );\n\n  const onDeleteTodo = useCallback(\n    (id: number) => {\n      const todoIndex = todos.findIndex((val) => val.id === id);\n\n      if (-1 < todoIndex) {\n        todos.splice(todoIndex, 1);\n        setTodos([...todos]);\n      }\n    },\n    [todos]\n  );\n\n  const onSetDoneStatus = useCallback(\n    (id: number, status: boolean) => {\n      const todo = todos.find((val) => val.id === id);\n\n      if (todo) {\n        todo.done = status;\n      }\n\n      setTodos([...todos]);\n    },\n    [todos]\n  );\n\n  return (\n    <TodoContext.Provider\n      value={{\n        addTodo: onAddTodo,\n        setDoneStatus: onSetDoneStatus,\n        deleteTodo: onDeleteTodo,\n        todos,\n      }}\n    >\n      {children}\n    </TodoContext.Provider>\n  );\n};\n", "import { useContext } from 'react';\n\nimport { TodoContext } from './todo.store';\n\nexport const useTodos = () => {\n  const todos = useContext(TodoContext);\n\n  if (null == todos) {\n    throw new Error('useTodos must be wrapped in a TodoProvider.');\n  }\n\n  return todos;\n};\n", "import { Box, Button, Column, Divider, Stack, Text } from '@cw/index';\nimport { useCallback, useState } from 'react';\n\nimport { useTodos } from './store';\nimport styles from './todo.css';\nimport { TodoItem } from './todoItem';\n\nimport type { Todo } from './types';\nimport type { LinksFunction } from '@remix-run/node';\n\nexport const TodoLinks: LinksFunction = () => {\n  return [\n  {\n    rel: 'stylesheet',\n    href: 'https://fonts.googleapis.com/css2?family=Oswald'\n  },\n  {\n    rel: 'stylesheet',\n    href: 'https://fonts.googleapis.com/css2?family=Source+Sans+Pro'\n  },\n  { rel: 'stylesheet', href: styles }];\n\n};\n\nexport const TodoApp = () => {\n  const [text, setText] = useState('');\n  const [validation, setValidation] = useState<string | undefined>();\n\n  const { addTodo, setDoneStatus, deleteTodo, todos } = useTodos();\n\n  const handleAddTodo = useCallback(() => {\n    if (text.length <= 0) {\n      setValidation('Text is required.');\n    } else {\n      setValidation(undefined);\n      addTodo(text);\n      setText('');\n    }\n  }, [text, addTodo]);\n\n  return (\n    <Box className=\"todo-container\">\n      <Stack gap=\"xlarge\" className=\"width-full\">\n        <Box>\n          <h1>ToDO List</h1>\n        </Box>\n        <Column>\n          <Text\n            label=\"Todo item\"\n            type=\"text\"\n            name=\"text\"\n            errorText={validation}\n            value={text}\n            onChange={(event) => {\n              setValidation(undefined);\n              setText(event.target.value);\n            }} />\n\n          <Button type=\"submit\" onClick={handleAddTodo}>\n            Add\n          </Button>\n        </Column>\n        <Divider colour=\"secondary\" />\n        <Stack gap=\"small\">\n          {todos.map((todo: Todo) =>\n          <TodoItem\n            key={JSON.stringify(todo)}\n            todo={todo}\n            setDoneStatus={setDoneStatus}\n            deleteTodo={deleteTodo} />\n\n          )}\n        </Stack>\n      </Stack>\n    </Box>);\n\n};", "import clsx from 'clsx';\n\nimport { Box, Checkbox, Column, Delete, IconButton } from '@cw/index';\n\nimport type { Todo } from './types/todo';\n\ntype TodoItemProps = {\n  setDoneStatus: (id: number, status: boolean) => void;\n  deleteTodo: (id: number) => void;\n  todo: Todo;\n};\n\nexport const TodoItem = ({\n  setDoneStatus,\n  deleteTodo,\n  todo,\n}: TodoItemProps) => {\n  const { text, done, id } = todo;\n  return (\n    <Column className=\"todo-item align-center\">\n      <Box className=\"box\">\n        <span className={clsx('text', { done })}>{text}</span>\n        <div className={clsx('todo', { done })} />\n      </Box>\n      <Box>\n        <Checkbox\n          name=\"todoItem-doneState\"\n          checked={done}\n          onChange={(event) => setDoneStatus(id, event.target.checked)}\n        />\n      </Box>\n      <IconButton Icon={Delete} onClick={() => deleteTodo(id)} />\n    </Column>\n  );\n};\n", "import { Link } from '@remix-run/react';\n\nimport { Box, Container, Stack } from '@cw/index';\n\n//eslint-disable-next-line\nexport default function Index() {\n  return (\n    <Container>\n      <main>\n        <h1>Welcome to Code Wizardry</h1>\n        <Stack gap=\"medium\">\n          <Box>\n            <Box>some text about</Box>\n          </Box>\n          <Box>\n            <h2>\n              <Link to=\"/projects\">Projects</Link>\n            </h2>\n          </Box>\n        </Stack>\n      </main>\n    </Container>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-PUA5XZJE.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-F5JEGH3J.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-XFW6AOUW.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-G7DTQ6NL.js','imports':['/build/_shared/chunk-UIRC43MY.js','/build/_shared/chunk-XJPFLF7F.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':true},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-XERPV2TD.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/projects._index':{'id':'routes/projects._index','parentId':'root','path':'projects','index':true,'caseSensitive':undefined,'module':'/build/routes/projects._index-Z7SMKQTU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/projects.todo':{'id':'routes/projects.todo','parentId':'root','path':'projects/todo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/projects.todo-DZ4EFV7W.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false}},'version':'d30f5a55','hmr':{'runtime':'/build/_shared/chunk-XFW6AOUW.js','timestamp':1695460607968},'url':'/build/manifest-D30F5A55.js'};", "\nimport * as entryServer from \"/home/ashc/projects/codewizardry/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/projects._index.tsx\";\nimport * as route2 from \"./routes/projects.todo/route.tsx\";\nimport * as route3 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/projects._index\": {\n      id: \"routes/projects._index\",\n      parentId: \"root\",\n      path: \"projects\",\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/projects.todo\": {\n      id: \"routes/projects.todo\",\n      parentId: \"root\",\n      path: \"projects/todo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": "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",
  "names": ["links", "jsxDEV", "links", "jsxDEV", "jsxDEV", "links", "jsxDEV", "clsx", "jsxDEV", "links", "clsx", "clsx", "jsxDEV", "links", "clsx", "jsxDEV", "links", "clsx", "jsxDEV", "links", "clsx", "clsx", "jsxDEV", "links", "clsx", "clsx", "jsxDEV", "links", "clsx", "clsx", "jsxDEV", "jsxDEV", "links", "jsxDEV", "links", "jsxDEV", "links", "useEffect", "useCallback", "useState", "jsxDEV", "todo", "useCallback", "useState", "clsx", "jsxDEV", "todo", "clsx", "jsxDEV", "useState", "useCallback", "todo", "jsxDEV", "links", "Link", "jsxDEV", "Link"]
}
